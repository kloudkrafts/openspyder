Steps:

  # - Name: GetToMongo.CloudSSODirectories
  #   Job: get_data_to_mongo
  #   Output: CloudSSODirectories
  #   Params:
  #     from_worker: aliyunCLIConnector
  #     model_name: CloudSSODirectories

  # - Name: GetDirectoryList
  #   Job: get_unique_key_list
  #   Input: CloudSSODirectories
  #   Output: DirectoryIds
  #   Params:
  #     key: directory_id
  #     datapath: data[].DirectoryId

  - Name: GetUsers
    Worker: aliyunConnector
    Job: get_data
    Input: DirectoryIds
    Output: CloudSSOUsers
    Params:
      model_name: CloudSSOUsers
  
  - Name: StoreUsersToMongo
    Worker: mongoDBConnector
    Job: upsert_dataset
    Input: CloudSSOUsers
    Output: CloudSSOUsersInsertionResult
  
  - Name: GetGroups
    Worker: aliyunConnector
    Job: get_data
    Input: DirectoryIds
    Output: CloudSSOGroups
    Params:
      model_name: CloudSSOGroups
  
  - Name: StoreGroupsToMongo
    Worker: mongoDBConnector
    Job: upsert_dataset
    Input: CloudSSOGroups
    Output: CloudSSOGroupsInsertionResult

  - Name: GetDirectoryGroupIds
    Worker: mongoDBConnector
    Job: execute_query
    Output: DirectoryGroupIds
    Params:
      query_name: GetDirectoryGroupIds
      query_conf:
        collection: CloudSSOGroups
        operations:
          $project:
            directory_id: $directory_id
            group_id: $GroupId
          $unset:
            - _id

  - Name: GetGroupMembers
    Worker: aliyunConnector
    Job: get_data
    Input: DirectoryGroupIds.data
    Output: CloudSSOGroupMembers
    Params:
      model_name: CloudSSOGroupMembers
  
  - Name: StoreGroupMembersToMongo
    Worker: mongoDBConnector
    Job: upsert_dataset
    Input: CloudSSOGroupMembers
    Output: CloudSSOGroupMembersInsertionResult
